---
API: 2.1
OpenSesame: 3.2.7a1
Platform: posix
---
set width 1024
set uniform_coordinates yes
set title "JavaScript test"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend legacy
set round_decimals 2
set mouse_backend legacy
set keyboard_backend legacy
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "/home/sebastiaan/git/osweb/example-experiments"
set disable_garbage_collection yes
set description "The main experiment item"
set coordinates uniform
set compensation 0
set color_backend legacy
set clock_backend legacy
set canvas_backend legacy
set background black

define loop block_loop
	set source table
	set repeat 10
	set order random
	set description "Repeatedly runs another item"
	set cycles 1
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 empty_column ""
	run trial_sequence

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run instructions always
	run block_loop always
	run new_feedback always

define sketchpad fixdot
	set duration 500
	set description "Displays stimuli"
	draw fixdot color=white show_if=always style=default x=0 y=0 z_index=0

define feedback green_dot
	set reset_variables no
	set duration 500
	set description "Provides feedback to the participant"
	draw fixdot color=green show_if=always style=default x=0 y=0 z_index=0

define sketchpad instructions
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="INSTRUCTIONS<br /><br />Press 'z' if you see a blue F<br />Press 'z' if you don't<br /><br />Press any key to continue!" x=0 y=0 z_index=0

define feedback new_feedback
	set reset_variables yes
	set duration keypress
	set description "Provides feedback to the participant"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Finished!<br /><br />Your average RT was [avg_rt] ms<br />Your accuracy was [acc] %<br /><br />Press any key to exit!" x=0 y=0 z_index=0

define feedback red_dot
	set reset_variables no
	set duration 500
	set description "Provides feedback to the participant"
	draw fixdot color=red show_if=always style=default x=0 y=0 z_index=0

define sketchpad search_display
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color="[color0]" font_bold=no font_family=mono font_italic=no font_size=48 html=yes show_if=always text="[stim0]" x="[x0]" y="[y0]" z_index=0
	draw textline center=1 color="[color1]" font_bold=no font_family=mono font_italic=no font_size=48 html=yes show_if=always text="[stim1]" x="[x1]" y="[y1]" z_index=0
	draw textline center=1 color="[color2]" font_bold=no font_family=mono font_italic=no font_size=48 html=yes show_if=always text="[stim2]" x="[x2]" y="[y2]" z_index=0
	draw textline center=1 color="[color3]" font_bold=no font_family=mono font_italic=no font_size=48 html=yes show_if=always text="[stim3]" x="[x3]" y="[y3]" z_index=0

define keyboard_response search_response
	set timeout infinite
	set flush yes
	set event_type keypress
	set duration keypress
	set description "Collects keyboard responses"
	set allowed_responses "z;m"

define inline_javascript trial_script
	set description "Executes JavaScript code (ECMA 5.1)"
	set _run ""
	___prepare__
	function shuffle(array) {
	    let counter = array.length;
	
	    // While there are elements in the array
	    while (counter > 0) {
	        // Pick a random index
	        let index = Math.floor(Math.random() * counter);
			console.log(index, array, array.length)
	        // Decrease counter by 1
	        counter--;
	
	        // And swap the last element with it
	        let temp = array[counter];
	        array[counter] = array[index];
	        array[index] = temp;
	    }
	    return array
	}
	
	let stimuli = shuffle(['F', 'H', 'E', 'Z'])
	let colors = shuffle(['blue', 'yellow', 'blue', 'yellow'])
	
	vars.correct_response = 'm'
	for (let i = 0; i <= 3; i++) {
		vars['x' + i] = Math.floor(Math.random() * 200 - 100)
		vars['y' + i] = Math.floor(Math.random() * 200 - 100)
		vars['stim' + i] = stimuli[i]
		vars['color' + i] = colors[i]
		if (stimuli[i] == 'F' && colors[i] == 'blue') {
			vars.correct_response = 'z'
		}
	}
	__end__

define sequence trial_sequence
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run trial_script always
	run fixdot always
	run search_display always
	run search_response always
	run green_dot "[correct] = 1"
	run red_dot "[correct] = 0"

